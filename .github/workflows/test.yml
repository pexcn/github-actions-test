name: Build

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    container:
      image: pexcn/docker-images:buster-openwrt
      volumes:
        - /usr/local/lib/android:/usr/local/lib/android
        - /usr/share/dotnet:/usr/share/dotnet
        - /opt/ghc:/opt/ghc
        - /opt/hostedtoolcache/CodeQL:/opt/hostedtoolcache/CodeQL
        - /var/run/docker.sock:/var/run/docker.sock
    env:
      TZ: Asia/Taipei
      BUILD_PROFILE: ${{ matrix.PROFILE }}
    strategy:
      fail-fast: false
      matrix:
        PROFILE:
          - ipq60xx-generic

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Run
        if: github.event_name == 'push' && startsWith(github.event.head_commit.message, '[release] ')
        run: |
          echo ${{ github.event.head_commit.message }}

      - name: Maximize build space
        run: |
          # remove unnecessary software
          sudo find /usr/local/lib/android -mindepth 1 -delete
          sudo find /usr/share/dotnet -mindepth 1 -delete
          sudo find /opt/ghc -mindepth 1 -delete
          sudo find /opt/hostedtoolcache/CodeQL -mindepth 1 -delete
          # remove docker images
          download_docker_binary() {
            local docker_version="24.0.6"
            local arch="x86_64"
            [ "$(dpkg --print-architecture)" = "amd64" ] || arch="aarch64"
            curl https://download.docker.com/linux/static/stable/${arch}/docker-${docker_version}.tgz | \
              sudo tar zxv -C /usr/local/bin/ docker/docker --strip-components 1
          }
          download_docker_binary
          sudo docker image prune -af

      - name: Run
        run: |
          df -Th

      - name: Upload to Releases
        if: github.event_name == 'push'
        uses: softprops/action-gh-release@v1
        with:
          #name:
          tag_name: ${{ github.ref_name }}
          files: ${{ env.BUILD_PROFILE }}.tar.gz
          #generate_release_notes: true
