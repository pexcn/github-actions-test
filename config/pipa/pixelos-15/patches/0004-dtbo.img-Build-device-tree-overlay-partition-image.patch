From ecfdb15a1ea3b525eda1b6db88860083f0cee40c Mon Sep 17 00:00:00 2001
From: Woody Lin <woodylin@google.com>
Date: Tue, 19 Jun 2018 05:00:40 +0000
Subject: [PATCH 1/2] dtbo.img: Build device tree overlay partition image

Inspired by "828e0b45 yueyao@ build device tree overlay partition
image", integrating the same feature into floral kernel. The difference
is all build-time generated *.dtbo are packed into dtbo.img instead of
packing only the dtbos specified by the dtboimg.cfg.

dtbo.img is built only when CONFIG_BUILD_ARM64_DT_OVERLAY is set.

Change-Id: Ic0ed97fe699ee56e7272001064abb584690aa40a
Signed-off-by: Woody Lin <woodylin@google.com>
---
 arch/arm64/Makefile        | 9 +++++++++
 arch/arm64/boot/.gitignore | 1 +
 arch/arm64/boot/Makefile   | 7 ++++++-
 scripts/Makefile.lib       | 5 +++++
 4 files changed, 21 insertions(+), 1 deletion(-)

diff --git a/arch/arm64/Makefile b/arch/arm64/Makefile
index 85d11c38c..1ff1e3296 100644
--- a/arch/arm64/Makefile
+++ b/arch/arm64/Makefile
@@ -148,6 +148,8 @@ endif
 
 KBUILD_DTBS	:= dtbs
 
+KBUILD_DTBO_IMG := dtbo.img
+
 ifeq ($(CONFIG_BUILD_ARM64_DT_OVERLAY),y)
 export DTC_FLAGS := -@
 endif
@@ -180,6 +182,13 @@ Image-dtb: vmlinux scripts dtbs
 Image.gz-dtb: vmlinux scripts dtbs Image.gz
 	$(Q)$(MAKE) $(build)=$(boot) $(boot)/$@
 
+ifeq ($(CONFIG_BUILD_ARM64_DT_OVERLAY),y)
+$(KBUILD_DTBO_IMG): dtbs
+	$(Q)$(MAKE) $(build)=$(boot) $(boot)/$@
+
+all: $(KBUILD_DTBO_IMG)
+endif
+
 PHONY += vdso_install
 vdso_install:
 	$(Q)$(MAKE) $(build)=arch/arm64/kernel/vdso $@
diff --git a/arch/arm64/boot/.gitignore b/arch/arm64/boot/.gitignore
index 34e35209f..08375ead9 100644
--- a/arch/arm64/boot/.gitignore
+++ b/arch/arm64/boot/.gitignore
@@ -2,3 +2,4 @@ Image
 Image-dtb
 Image.gz
 Image.gz-dtb
+dtbo.img
diff --git a/arch/arm64/boot/Makefile b/arch/arm64/boot/Makefile
index 4715d40a6..7e1ba2afb 100644
--- a/arch/arm64/boot/Makefile
+++ b/arch/arm64/boot/Makefile
@@ -18,7 +18,7 @@ include $(srctree)/arch/arm64/boot/dts/Makefile
 
 OBJCOPYFLAGS_Image :=-O binary -R .note -R .note.gnu.build-id -R .comment -S
 
-targets := Image Image.bz2 Image.gz Image.lz4 Image.lzma Image.lzo
+targets := Image Image.bz2 Image.gz Image.lz4 Image.lzma Image.lzo dtbo.img
 
 DTB_NAMES := $(subst $\",,$(CONFIG_BUILD_ARM64_APPENDED_DTB_IMAGE_NAMES))
 ifneq ($(DTB_NAMES),)
@@ -28,6 +28,8 @@ DTB_LIST := $(dtb-y)
 endif
 DTB_OBJS := $(shell find $(obj)/dts/ -name \*.dtb)
 
+DTBO_OBJS := $(shell find $(obj)/dts/ -name \*.dtbo)
+
 # Add RTIC DTB to the DTB list if RTIC MPGen is enabled
 # Note, we keep this for compatibility with
 # BUILD_ARM64_APPENDED_DTB_IMAGE targets.
@@ -68,6 +70,9 @@ $(obj)/Image.lzo: $(obj)/Image FORCE
 $(obj)/Image.gz-dtb: $(obj)/Image.gz $(DTB_OBJS) FORCE
 	$(call if_changed,cat)
 
+$(obj)/dtbo.img: $(DTBO_OBJS) FORCE
+	$(call if_changed,mkdtimg)
+
 install:
 	$(CONFIG_SHELL) $(srctree)/$(src)/install.sh $(KERNELRELEASE) \
 	$(obj)/Image System.map "$(INSTALL_PATH)"
diff --git a/scripts/Makefile.lib b/scripts/Makefile.lib
index a7356314a..e1a59e1b8 100644
--- a/scripts/Makefile.lib
+++ b/scripts/Makefile.lib
@@ -318,6 +318,11 @@ $(obj)/%.dtb: $(src)/%.dts $(DTC) FORCE
 
 dtc-tmp = $(subst $(comma),_,$(dot-target).dts.tmp)
 
+# mkdtimg
+#----------------------------------------------------------------------------
+quiet_cmd_mkdtimg = DTBOIMG $@
+cmd_mkdtimg = mkdtimg create $@ --page_size=4096 $(filter-out FORCE,$^)
+
 # cat
 # ---------------------------------------------------------------------------
 # Concatentate multiple files together
-- 
2.39.5

